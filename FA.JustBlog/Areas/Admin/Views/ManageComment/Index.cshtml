@model  IPagedList<FA.JustBlog.Core.Models.Comment>
@using GridMvc.Html
@using PagedList.Mvc
@using PagedList
@{
    ViewBag.Title = "Comment";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<!-- Breadcrumbs-->

<h4>@Html.ActionLink("Add New Comment", "Create", "ManageComment", new { id = "btn-create" })</h4>
<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-table"></i>
        Data Table Comment
    </div>
    <div class="card-body">
        <div class="table-responsive">
            @Html.Grid(Model).Columns(column =>
       {
           column.Add(model => model.Name).SetWidth(100).Titled("Name");
           column.Add(model => model.Email).SetWidth(200).Titled("Email");
           //column.Add(model => model.Post.Title).SetWidth(50).Titled("Post");
           column.Add(model => model.CommentHeader).SetWidth(100).Titled("Title");
           column.Add(model => model.CommentText).SetWidth(200).Titled("Comment");
           column.Add(model => model.CommentTime).SetWidth(100).Titled("DateTime");
           column.Add().Encoded(false).Sanitized(false).SetWidth(50).RenderValueAs(o => Html.ActionLink("Edit", "Edit", "ManageComment", new { id = o.Id }, new { @class = "btn btn-primary btn-edit" }) + "" + Html.ActionLink("Delete", "Delete", "ManageComment", new { id = o.Id }, new { @class = "btn btn-danger btn-delete" }) + Html.ActionLink("Detail", "Detail", "ManageComment", new { id = o.Id }, new { @class = "btn btn-info btn-detail" })).Titled("#");

       }).WithPaging(3).Sortable(true)
        </div>
        @Html.PagedListPager(Model, i => Url.Action("Index", "ManageComment", new { i }), new PagedListRenderOptions { LiElementClasses = new string[] { "page-item" } })
    </div>
    <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
</div>

@section Scripts{
<script>
    $('table tbody tr td:nth-child(6)').addClass('btn-group btn-group-sm');
    $('ul.pagination li a').addClass('page-link');

    var userRole = '@(User.IsInRole("User") ? "true" : "false")';
    if (userRole == "true") {
        $("#btn-create").remove();
        $(".btn-edit").remove();
        $(".btn-delete").remove();
    }

    var contributorRole = '@(User.IsInRole("Contributor") ? "true" : "false")';
    if (contributorRole == "true") {
        $("#btn-create").remove();
        $(".btn-delete").remove();
    }

 </script>
}

