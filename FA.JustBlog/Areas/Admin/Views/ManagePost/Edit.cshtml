@model FA.JustBlog.Areas.Admin.Models.ViewModelPost

@{
    ViewBag.Title = "Edit Post";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

}
@Html.Partial("_PartialTagPost")
<h3>Edit Post</h3>

@using (Html.BeginForm("Edit", "ManagePost", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<input type="hidden" name="Id" value="@Model.Id" />
        @foreach (var item in Model.Tags)
        {
            <input type="hidden" class="hiddenTag" value="@item.Name" />
        }*@
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PostContent, new { @class = "form-control", rows = 5, style = "resize: none" })
                @Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlSlug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlSlug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UrlSlug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-check">
            @Html.CheckBoxFor(model => model.Published)
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "form-check-labe control-label col-md-2", @for = "Published" })

            @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.CategoryList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.Label("Tag", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TagMulti, (MultiSelectList)ViewBag.TagList, htmlAttributes: new { @class = "form-control choices-multiple-remove-button", @multiple = "multiple" })
                @Html.ValidationMessage("Tag", "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">Save</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

